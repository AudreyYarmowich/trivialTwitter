Ttweet protocol v1.0

Author: Benjamin Yarmowich
Date: February 10, 2019

Ttweet uses a standard TCP connection.
A Ttweet server binds to a port number and remains actively waiting for connections. 
The client must provide a request for connection (SYN) including an initial sequence number.
Upon an attempt to connect the server responds with an accept request message (ACK) that includes the initial sequence number (from the SYN) + 1
The client must then respond with a message (ACK) that includes the returned sequence number (from the server ACK) + 1 (again so the end number is initial sequence number + 2)

A connection is now established. 
The server will then expect a binary message in the form of "(<isDownload>, '<Message>')"
isDownload should contain the string "True" if the client is in download mode and the string "False" if the client is in upload mode.
A Message should be no longer than 150 characters in length.

Download mode:
If isDownload equals "True" the server will reply with the last saved message. If no message has been saved before it will return "Empty Message"

Upload mode:
If isDownload equals "False" the server will attempt to save the Message. If the message is saved successfully the server will reply "message upload successful" otherwise it will reply with the error encountered

At start up the server will print the host and port it is bound to.
As connections come in it will print the host and port of the client connecting to it and then the value of message after handling the client request.

A ttweet server will stay up until it is exited by a user.
Any errors encountered will be printed and then the server will return to listening and handling requests.